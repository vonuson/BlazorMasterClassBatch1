@page "/navigation/{message?}"
@inject NavigationManager NavigationManager
@implements IDisposable

<h1>Hello, @Message</h1>

<div>
    <a href="counter">Counter</a>
</div>
<div>
    <a href="fetchdata">Fetch Data</a>
</div>
<div>
    <NavLink href="navigation/Blazor">Blazor</NavLink>
</div>
<div>
    <NavLink href="navigation/Masters">Masters</NavLink>
</div>

<div class="mt-2">
    <button class="btn btn-primary" @onclick='()=>NavigateTo("Norben")'>Blazor</button>
    <button class="btn btn-primary" @onclick='()=>NavigateTo("Oriarte")'>Masters</button>
</div>

@foreach (var locationEvent in LocationEvents)
{
    <div class="card mt-2">
        <div class="card-body">
            @locationEvent
        </div>
    </div>
}

@code {
    [Parameter]
    public string Message { get; set; }

    protected List<string> LocationEvents { get; set; } = new();

    private void NavigateTo(string route)
    {
        NavigationManager.NavigateTo($"/navigation/{route}");
    }

    protected override void OnInitialized()
    {
        NavigationManager.LocationChanged += HandleLocationChanged;
    }

    private void HandleLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        string navigationMethod = e.IsNavigationIntercepted ? "HTML" : "code";
        LocationEvents.Add($"Notified of navigation via {navigationMethod} to {e.Location}");
        StateHasChanged();
    }

    void IDisposable.Dispose()
    {
        NavigationManager.LocationChanged -= HandleLocationChanged;
    }
}

<style>
    .active, .active:hover {
        color: red;
    }
</style>
